[workspace]
members = [
    "crates/bevy_editor_core",
    "crates/bevy_editor_app",
    "crates/bevy_editor",
    "crates/bevy_editor_foundation",
    "crates/bevy_editor_formats",
    "crates/bevy_editor_commands",
    "crates/bevy_editor_tilemap",
    "crates/bevy_editor_scene",
    "crates/bevy_editor_project",
    "crates/bevy_editor_assets",
    "crates/bevy_editor_frontend_api",
    "crates/bevy_editor_ui_egui",
    "crates/bevy_editor_runtime",
    "crates/bevy_editor_templates",
]
resolver = "2"

[workspace.dependencies]
bevy = { version = "0.16.0", default-features = false, features = [
  "std",
  "bevy_log",
  "dynamic_linking",
  "bevy_dev_tools",
  "bevy_ui_debug",
  "track_location",
  "file_watcher",
  "embedded_watcher",
  "multi_threaded",
  "bevy_sprite",
  "bevy_render",
  "bevy_core_pipeline",
  "bevy_text",
  "bevy_ui",
  "bevy_winit",
  "bevy_gizmos",
  "bevy_scene",
  "bevy_audio",
  "png",
] }

[workspace.metadata.bevy_cli.release]
# Disable dev features for release builds.
default-features = false

[workspace.metadata.bevy_cli.web]
# Disable native features for web builds.
default-features = false

[workspace.metadata.bevy_cli.web.dev]
features = ["dev"]


[workspace.lints.rust]
# Mark `bevy_lint` as a valid `cfg`, as it is set when the Bevy linter runs.
unexpected_cfgs = { level = "warn", check-cfg = ["cfg(bevy_lint)"] }

[workspace.lints.clippy]
# Bevy supplies arguments to systems via dependency injection, so it's natural for systems to
# request more than 7 arguments, which would undesirably trigger this lint.
too_many_arguments = "allow"
# Queries may access many components, which would undesirably trigger this lint.
type_complexity = "allow"
# Make sure macros use their standard braces, such as `[]` for `bevy_ecs::children!`.
nonstandard_macro_braces = "warn"

# You can configure the warning levels of Bevy lints here. For a list of all lints, see:
# <https://thebevyflock.github.io/bevy_cli/bevy_lint/lints/>
[workspace.metadata.bevy_lint]
# panicking_methods = "deny"
# pedantic = "warn"


# Compile with Performance Optimizations:
# <https://bevyengine.org/learn/quick-start/getting-started/setup/#compile-with-performance-optimizations>

# Enable a small amount of optimization in the dev profile.
[profile.dev]
opt-level = 1

# Enable a large amount of optimization in the dev profile for dependencies.
[profile.dev.package."*"]
opt-level = 3

# Remove expensive debug assertions due to <https://github.com/bevyengine/bevy/issues/14291>
[profile.dev.package.wgpu-types]
debug-assertions = false

[profile.release]
# Compile the entire crate as one unit.
# Slows compile times, marginal improvements.
codegen-units = 1
# Do a second optimization pass over the entire program, including dependencies.
# Slows compile times, marginal improvements.
lto = "thin"

# This profile will be used by `bevy run web` automatically.
[profile.web-release]
# Default to release profile values.
inherits = "release"
# Optimize with size in mind (also try "z", sometimes it is better).
# Slightly slows compile times, great improvements to file size and runtime performance.
opt-level = "s"
# Strip all debugging information from the binary to slightly reduce file size.
strip = "debuginfo"

# Optimize for build time in CI.
[profile.ci]
inherits = "dev"
opt-level = 0
debug = "line-tables-only"
codegen-units = 4

[profile.ci.package."*"]
opt-level = 0

# NOTE: Linker configuration has been moved to .cargo/config.toml
# (Virtual manifests cannot have [target.*] sections)
